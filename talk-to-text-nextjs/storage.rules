rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Audio file uploads - users can upload to their own folders
    match /uploads/{userId}/{fileName} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && 
        request.auth.uid == userId &&
        // Limit file size to 100MB
        request.resource.size < 100 * 1024 * 1024 &&
        // Only allow specific audio formats
        request.resource.contentType.matches('audio/.*') ||
        request.resource.contentType in ['audio/mpeg', 'audio/wav', 'audio/mp4', 'audio/m4a'];
    }
    
    // Transcription results - users can read their own, only system can write
    match /transcriptions/{userId}/{transcriptionId}/{fileName} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // Only Firebase Functions can write transcription results
    }
    
    // Legal document templates - read-only access for authenticated users
    match /legal_templates/{templateId}/{fileName} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins via backend
    }
    
    // User profile pictures
    match /profile_pictures/{userId}/{fileName} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && 
        request.auth.uid == userId &&
        request.resource.size < 5 * 1024 * 1024 && // 5MB limit
        request.resource.contentType.matches('image/.*');
    }
    
    // System assets (logos, etc.) - read-only
    match /assets/{allPaths=**} {
      allow read: if true; // Public read access
      allow write: if false; // Only admins via backend
    }
    
    // Backup and admin files - admin only
    match /admin/{allPaths=**} {
      allow read, write: if request.auth != null && 
        // This would require a Firestore lookup to check admin role
        // For now, restrict to Firebase Functions only
        false;
    }
  }
}