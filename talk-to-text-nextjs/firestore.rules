rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own user documents
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Transcription documents - users can only access their own
    match /transcriptions/{transcriptionId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Trial usage tracking
    match /usage/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Subscription and billing data
    match /subscriptions/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // Only backend can modify subscriptions
    }
    
    // Legal documents and templates (read-only for users)
    match /legal_templates/{templateId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins can modify via backend
    }
    
    // Admin-only collections
    match /admin/{document=**} {
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // System settings (read-only)
    match /settings/{settingId} {
      allow read: if request.auth != null;
      allow write: if false; // Only backend can modify
    }
    
    // Audit logs (read-only for admins)
    match /audit_logs/{logId} {
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow write: if false; // Only backend can create logs
    }
  }
}